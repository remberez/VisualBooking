# Generated by Django 5.1 on 2024-09-29 14:00

import django.contrib.auth.validators
import django.db.models.deletion
import users.models.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='Роль')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Почта')),
                ('phone', models.CharField(blank=True, null=True, unique=True, verbose_name='Номер телефона')),
                ('surname', models.CharField(max_length=25, verbose_name='Фамилия')),
                ('name', models.CharField(max_length=25, verbose_name='Имя')),
                ('patronymic', models.CharField(max_length=25, verbose_name='Отчество')),
                ('image', models.ImageField(blank=True, null=True, upload_to='users/%Y/%m/%d/')),
                ('date_joined', models.DateField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.group', verbose_name='Группы')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.permission', verbose_name='Разрешения')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='users', to='users.position', verbose_name='Должность')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', users.models.managers.CustomUserManager()),
            ],
        ),
    ]
